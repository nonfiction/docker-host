version: '3.8'
services:

  traefik:
    image: nonfiction/traefik:latest
    command:

      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker

      # Enable Docker Swarm mode
      - --providers.docker.swarmmode

      # Docker endpoint running on primary
      # - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.endPoint=ssh://root@__PRIMARY_IP__:22

      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false

      # Use this docker network for container communications
      - --providers.docker.network=proxy

      # Enable the access log, with HTTP requests
      # - --accesslog

      # Enable the Traefik log, for configurations and errors
      - --log

      # Enable the Dashboard and API
      - --api
      - --api.insecure
      - --pilot.dashboard=false

      # Allow backend services to serve https with self-signed certs
      - --serversTransport.insecureSkipVerify=true

      # Create a entrypoints http/https listening on ports 80/443
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

      # Support auto-renewing https certificates
      - --certificatesResolvers.digitalocean.acme.dnsChallenge=true
      - --certificatesResolvers.digitalocean.acme.dnsChallenge.provider=digitalocean
      - --certificatesresolvers.digitalocean.acme.email=dns@nonfiction.ca
      - --certificatesresolvers.digitalocean.acme.storage=/acme.json
      - --certificatesResolvers.digitalocean.acme.dnsChallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      - --certificatesresolvers.digitalocean.acme.dnschallenge.delaybeforecheck=0

      # - --providers.file.directory=/root/docker-host/config
      # - --providers.file.watch=true
      
    secrets:
      - do_auth_token
      - root_private_key

    deploy:
      mode: global

      labels:
        traefik.enable: "true"
        traefik.docker.network: "proxy"
        traefik.docker.lbswarm: "true"

        # Domains Certificates
        traefik.http.routers.wildcard-certs.tls.certresolver: "digitalocean" # __DOMAINS__
        # traefik.http.routers.wildcard-certs.tls.domains[0].main: "example.nfweb.ca"
        # traefik.http.routers.wildcard-certs.tls.domains[0].sans: "*.example.nfweb.ca"

        # Dashboards
        traefik.http.routers.traefik.rule: "Host(__HOSTS__)"
        traefik.http.routers.traefik.entrypoints: "websecure"
        traefik.http.routers.traefik.tls: "true"
        traefik.http.routers.traefik.service: "api@internal"
        traefik.http.services.traefik.loadbalancer.server.port: "8080"

        # Global redirect to https
        traefik.http.routers.http-catchall.rule: "hostregexp(`{host:.+}`)"
        traefik.http.routers.http-catchall.entrypoints: "web"
        traefik.http.routers.http-catchall.middlewares: "redirect-to-https@docker"
        traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: "https"

    networks:
      - proxy

    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host

    logging:
      options:
        max-size: "1m"

    volumes:
      - /data/traefik/acme.json:/acme.json

secrets:
  do_auth_token:
    external: true
  root_private_key:
    external: true

networks:
  proxy:
    name: proxy
    driver: overlay
    external: true
