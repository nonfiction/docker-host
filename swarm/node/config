#!/bin/bash

# Bash helper functions
if [ -e /root/platform/swarm/lib/helpers.sh ]; then source /root/platform/swarm/lib/helpers.sh;
else source <(curl -fsSL https://github.com/nonfiction/platform/raw/master/swarm/lib/helpers.sh); fi

# Volumes functions
if [ -e /root/platform/swarm/lib/volumes.sh ]; then source /root/platform/swarm/lib/volumes.sh;
else source <(curl -fsSL https://github.com/nonfiction/platform/raw/master/swarm/lib/volumes.sh); fi

# Ensure all these volumes directories exist
if defined $NAME; then
  volumes_env $NAME
  mkdir -p $GFS_DATA_MNT $(dev_dir $GFS_DATA_DEV) 
  mkdir -p $GFS_WORK_MNT $(dev_dir $GFS_WORK_DEV)
  mkdir -p $DO_BLOCK_MNT
fi

# Set root password
if defined $ROOT_PASSWORD; then
  echo_next "Setting password" 
  for user in root work; do
    echo "${user}:${ROOT_PASSWORD}"
    echo "${user}:${ROOT_PASSWORD}" | chpasswd
  done
fi

# Settings authorized_keys
if defined $ROOT_PUBLIC_KEY; then
  keys="$(curl -sL https://github.com/nonfiction/workspace/raw/main/config/ssh/authorized_keys)"
  keys=$(echo -e "${ROOT_PUBLIC_KEY}\n${keys}")
  echo_next "Writing /root/.ssh/authorized_keys"
  echo "$keys" | tee /root/.ssh/authorized_keys
  echo_run "cp -f /root/.ssh/authorized_keys /work/.ssh/authorized_keys"
fi

# Update /etc/hosts file
if defined $HOSTS_FILE && defined $NAME && defined $DOMAIN; then
  echo_next "Setting /etc/hosts on $NAME"
  hosts_self="127.0.1.1 ${NAME}.${DOMAIN} $NAME"
  echo -e "${hosts_self}\n${HOSTS_FILE}" | tee /etc/hosts
fi
                                                                              
# Self-manage /etc/hosts file
if undefined "$(cat /etc/cloud/cloud.cfg | grep manage_etc_hosts)"; then
  echo_next "Appending /etc/cloud/cloud.cfg"
  echo "manage_etc_hosts: False" | tee --append /etc/cloud/cloud.cfg
fi


# Add block storage to fstab
if defined $DO_BLOCK_DEV && defined $DO_BLOCK_MNT && defined $FS_TYPE; then

  entry="${DO_BLOCK_DEV} ${DO_BLOCK_MNT} ${FS_TYPE} defaults,nofail,discard 0 0"
  if undefined "$(cat /etc/fstab | grep "${entry}")"; then
    echo_next "Appending /etc/fstab"
    echo "${entry}" | tee --append /etc/fstab
  fi

  # Mount it right now
  echo_next "Mount block storage"
  echo_run "mount -o discard,defaults,noatime ${DO_BLOCK_DEV} ${DO_BLOCK_MNT}"

fi
