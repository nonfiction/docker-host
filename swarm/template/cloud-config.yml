#cloud-config
hostname: __NODE__
fqdn: __NODE__.__DOMAIN__

package_update: true
package_upgrade: true
package_reboot_if_required: true

packages:
  - zsh
  - mosh
  - fail2ban
  - build-essential
  - apt-transport-https
  - ca-certificates
  - gnupg-agent
  - software-properties-common
  - curl
  - make
  - unzip
  - apache2-utils
  - sshpass

write_files:

  # Make note of the node's name
  - path: /etc/node
    content: | 
       __NODE__

  # Make note of the domain this node belongs to
  - path: /etc/domain
    content: | 
       __DOMAIN__

  # Make note of the swarm this node belongs to
  - path: /etc/swarm
    content: | 
       __SWARM__

  # Make note of which droplet image
  - path: /etc/droplet_image
    content: | 
       __DROPLET_IMAGE__

  # Make note of which file system
  - path: /etc/fs_type
    content: | 
       __FS_TYPE__

  # Make note of which region
  - path: /etc/region
    content: | 
       __REGION__
  
  # Optimize SSHD for docker
  - path: /etc/ssh/sshd_config
    content: | 
       MaxSessions 500
    append: true

  # Optimize SSH for docker
  - path: /etc/ssh/ssh_config
    content: | 
       StrictHostKeyChecking no
       UserKnownHostsFile=/dev/null
       ControlMaster auto
       ControlPath ~/.ssh/control-%C
       ControlPersist yes
    append: true
    
  # Auto-prune docker once in a while
  - path: /etc/crontab
    content: | 
       0 3 * * * root /usr/bin/docker system prune -f > /dev/null 2>&1
    append: true

  # Run script on reboot
  - path: /etc/crontab
    content: | 
       @reboot /root/platform/swarm/node/reboot
    append: true

disable_root: false
ssh_pwauth: false

users:
  
  # Password is "secret", but gets changed immediately
  - name: root
    lock_passwd: false
    hashed_passwd: $1$SaltSalt$YhgRYajLPrYevs14poKBQ0
    ssh-authorized-keys:
      - __ROOT_PUBLIC_KEY__

  # Work user is mostly used in container, but create matching user on host
  # Authorized keys from root is copied to this user
  - name: work
    lock_passwd: false
    hashed_passwd: $1$SaltSalt$YhgRYajLPrYevs14poKBQ0
    homedir: /work
    ssh-authorized-keys:
      - __ROOT_PUBLIC_KEY__

runcmd:

  # Webhook
  - echo "__WEBHOOK__" > /etc/webhook
  - SAY="is now online, but still installing packages." /bin/bash -c "$(curl -fsSL https://github.com/nonfiction/platform/raw/master/swarm/node/webhook)"
  
  # Keep server up-to-date
  - apt-get --yes install unattended-upgrades
  - dpkg-reconfigure --priority=low unattended-upgrades

  # Generate ssh keys
  - cat /dev/zero | ssh-keygen -t rsa -q -N ""
  
  # Install glusterfs
  - add-apt-repository --yes ppa:gluster/glusterfs-9
  - apt-get update && apt-get --yes install glusterfs-server 
  - systemctl start glusterd
  - systemctl enable glusterd
  
  # Install docker
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - apt-get update && apt-get --yes install docker-ce docker-ce-cli containerd.io
  
  # Install platform git repo
  - apt-get update && apt-get --yes install make
  - git clone https://github.com/nonfiction/platform.git /root/platform
  - ln -sf /root/platform/swarm/swarm /usr/local/bin/swarm

  # It's ready!
  - SAY="is ready!" /root/platform/swarm/node/webhook

# Reboot server after everything is installed
power_state:
  delay: now
  mode: reboot
  message: Rebooting the OS
  condition: if [ -e /var/run/reboot-required ]; then exit 0; else exit 1; fi
