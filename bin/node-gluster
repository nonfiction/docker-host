#!/bin/bash

# Bash helper functions
if [ -e ../lib/helpers.sh ]; then source ../lib/helpers.sh;
else source <(curl -fsSL https://github.com/nonfiction/platform/raw/master/lib/helpers.sh); fi

# Digital Ocean API functions
if [ -e ../lib/gluster.sh ]; then source ../lib/gluster.sh;
else source <(curl -fsSL https://github.com/nonfiction/platform/raw/master/lib/gluster.sh); fi


# Defaults 
undefined $VOLUME_NAME && VOLUME_NAME="data-gfs"
undefined $VOLUME_MOUNT && VOLUME_MOUNT="/data"
# BRICK_DIR optional

# Proceed!
if defined $NAME && defined $PRIMARY; then

  # Most of this occurs on the primary node
  if [ "$NAME" = "$PRIMARY" ]; then
    if defined $NODES; then

      # GlusterFS probe nodes  
      echo_next "Gluster probe peers"
      for node in $NODES; do
        if [ "$node" != "$PRIMARY" ]; then
          echo "${node}: $(gluster peer probe $node)"
        fi
      done

      echo_info "Gluster pool list"
      gluster pool list


      echo_next "Gluster create volumes & bricks"
      for node in $NODES; do

        # $BRICK_DIR will override this
        brick_dir="$(get_brick_dir $node)"
        mkdir -p $brick_dir

        # Primary node
        if [ "$node" = "$PRIMARY" ]; then

          # Check if volume does not yet exist
          if undefined_volume $VOLUME_NAME; then

            # Create volume 
            echo_next "Gluster create $VOLUME_NAME"
            echo_cmd "gluster volume create $VOLUME_NAME ${node}:${brick_dir} force" 3

            # Start volume
            echo_next "Gluster start $VOLUME_NAME"
            echo_cmd "gluster volume start ${VOLUME_NAME}" 3

          fi

        # Replica nodes
        else

          # Check if brick does not yet exist
          node_brick="${node}:${brick_dir}"
          if undefined_brick $VOLUME_NAME $node_brick; then

            # Add brick to volume
            bricks=$(get_bricks $VOLUME_NAME)
            echo_cmd "gluster volume add-brick ${VOLUME_NAME} replica $((bricks + 1)) ${node_brick} force" 3

          fi

        fi
      done

    fi
  fi

  
  # Every node must mount the volume
  if unmounted_volume $VOLUME_NAME; then
    echo_next "Gluster mount $VOLUME_NAME"
    mkdir -p $VOLUME_MOUNT
    echo_cmd "mount.glusterfs localhost:/${VOLUME_NAME} ${VOLUME_MOUNT}"
  fi

  # Make sure this volume is mounted upon reboot
  file="/etc/fstab"
  entry="localhost:/${VOLUME_NAME} ${VOLUME_MOUNT} glusterfs defaults,_netdev,backupvolfile-server=localhost 0 0"
  if undefined "$(cat $file | grep "${entry}")"; then
    echo_next "Appending $file"
    echo "${entry}" | tee --append $file
  fi


fi
